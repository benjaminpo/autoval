name: Release Management

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., 1.0.0)'
        required: true
        type: string

jobs:
  create-release:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
    
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Install dependencies
      run: |
        npm ci
        python -m pip install --upgrade pip
        pip install -r backend/requirements.txt
        pip install pytest pytest-cov pytest-mock
    
    - name: Run full test suite
      run: |
        npm run test:coverage
        cd backend
        python -m pytest -v --cov=app
    
    - name: Build application
      run: npm run build
    
    - name: Generate changelog
      run: |
        echo "# Changelog" > CHANGELOG.md
        echo "" >> CHANGELOG.md
        echo "## Changes in this release:" >> CHANGELOG.md
        git log --oneline --since="$(git describe --tags --abbrev=0 HEAD^)..HEAD" >> CHANGELOG.md || echo "First release" >> CHANGELOG.md
    
    - name: Create GitHub Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref_name || github.event.inputs.version }}
        release_name: Release ${{ github.ref_name || github.event.inputs.version }}
        body_path: CHANGELOG.md
        draft: false
        prerelease: false
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: release-build
        path: |
          .next/
          backend/
          package.json
          package-lock.json
          README.md

  docker-build:
    runs-on: ubuntu-latest
    needs: create-release
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: |
          ${{ secrets.DOCKER_USERNAME }}/autoval:latest
          ${{ secrets.DOCKER_USERNAME }}/autoval:${{ github.ref_name || github.event.inputs.version }}
        platforms: linux/amd64,linux/arm64
